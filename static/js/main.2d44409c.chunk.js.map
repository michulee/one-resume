{"version":3,"sources":["templates/PreClassic.js","templates/Classic.js","components/TextInput.js","components/TextArea.js","components/Dashboard.js","components/SectionHeader.js","components/ButtonRound.js","sections/Basic.js","sections/Education.js","features/counter/counterAPI.js","features/counter/counterSlice.js","App.js","app/store.js","serviceWorker.js","reportWebVitals.js","index.js","features/counter/Counter.module.css"],"names":["Container","styled","div","Header","VerticalLine","Title","h1","Info","InfoItem","Body","SubHeader","h2","Section","section","Paragraph","p","Margin","PreClassic","props","Classic","useState","toggleOn","data","firstName","middleName","lastName","id","undefined","objective","school","skills","Label","label","Input","input","Item","TextInput","className","htmlFor","name","type","placeholder","textarea","Nav","FixedArea","ButtonArea","Template","Form","form","TextAreaWide","rows","Card","ButtonSection","button","NavContents","template","setTemplate","state","setState","onClick","onChange","e","preventDefault","target","value","SectionHeader","console","log","hr","fetchCount","amount","Promise","resolve","setTimeout","incrementAsync","createAsyncThunk","a","response","counterSlice","createSlice","initialState","status","reducers","increment","decrement","incrementByAmount","action","payload","extraReducers","builder","addCase","pending","fulfilled","actions","App","store","configureStore","reducer","counter","counterReducer","Boolean","window","location","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.2d44409c.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  // justify-content: center;\r\n  // align-items: center;\r\n\r\n  width: 37.1875em;\r\n  height: 52.625em;\r\n  background-color: white;\r\n\r\n  // padding: 6rem;\r\n  // overflow: hidden;\r\n`;\r\n\r\nconst Header = styled.div`\r\n  text-align: center;\r\n`;\r\n\r\nconst VerticalLine = styled.div`\r\n  border: 1px solid #e1e1e1;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  margin: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 0.5rem;\r\n`;\r\n\r\nconst Info = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n  gap: 10px;\r\n`;\r\n\r\nconst InfoItem = styled.div``;\r\n\r\nconst Body = styled.div``;\r\n\r\nconst SubHeader = styled.h2`\r\n  border-bottom: 1px solid black;\r\n  margin-bottom: 0;\r\n`;\r\n\r\nconst Section = styled.section``;\r\n\r\nconst Paragraph = styled.p`\r\n  margin: 0;\r\n`;\r\n\r\nconst Margin = styled.div`\r\n  margin: 6rem;\r\n  overflow: hidden;\r\n`\r\n\r\nexport default function PreClassic(props) {\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Margin>\r\n          <Header>\r\n            <Title>\r\n              <Paragraph>First</Paragraph>\r\n              <Paragraph>Middle</Paragraph>\r\n              <Paragraph>Last</Paragraph>\r\n            </Title>\r\n            <Info>\r\n              <InfoItem>johndoe@gmail.com</InfoItem>\r\n              <VerticalLine/>\r\n              <InfoItem>(123) 4567 - 7890</InfoItem>\r\n              <VerticalLine/>\r\n              <InfoItem>www.johndoe.github.io</InfoItem>\r\n              <VerticalLine/>\r\n              <InfoItem>www.website.com</InfoItem>\r\n              <VerticalLine/>\r\n              <InfoItem>www.linkedin.com/in/johndoe</InfoItem>\r\n            </Info>\r\n          </Header>\r\n          <Body>\r\n            <Section>\r\n              <SubHeader>Objective</SubHeader>\r\n              <Paragraph>\r\n                Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quasi\r\n                quisquam sequi hic commodi voluptatem quidem magnam excepturi\r\n                ullam necessitatibus explicabo nemo quam illo, cumque sapiente id\r\n                laborum dolor culpa. Doloremque.\r\n              </Paragraph>\r\n            </Section>\r\n            <Section>\r\n              <SubHeader>Education</SubHeader>\r\n              <Paragraph>SchoolName, State, City</Paragraph>\r\n              <Paragraph>BS Computer Science, YearStart - YearEnd</Paragraph>\r\n            </Section>\r\n            <Section>\r\n              <SubHeader>Work Experience</SubHeader>\r\n              <Paragraph>CompanyName, State, City</Paragraph>\r\n              <Paragraph>JobTitle, YearStart - YearEnd</Paragraph>\r\n              {/* <TextArea>Job Description</TextArea> */}\r\n              <Paragraph>Job Description</Paragraph>\r\n            </Section>\r\n            <Section>\r\n              <SubHeader>Skills</SubHeader>\r\n              <Paragraph>HTML, CSS, JavaScript</Paragraph>\r\n            </Section>\r\n            <Section>\r\n              <SubHeader>Skills</SubHeader>\r\n              <Paragraph>HTML, CSS, JavaScript</Paragraph>\r\n              <Paragraph>HTML, CSS, JavaScript</Paragraph>\r\n              <Paragraph>HTML, CSS, JavaScript</Paragraph>\r\n              <Paragraph>HTML, CSS, JavaScript</Paragraph>\r\n              <Paragraph>HTML, CSS, JavaScript</Paragraph>\r\n              <Paragraph>HTML, CSS, JavaScript</Paragraph>\r\n              <Paragraph>HTML, CSS, JavaScript</Paragraph>\r\n              <Paragraph>HTML, CSS, JavaScript</Paragraph>\r\n              <Paragraph>HTML, CSS, JavaScript</Paragraph>\r\n              <Paragraph>HTML, CSS, JavaScript</Paragraph>\r\n              <Paragraph>HTML, CSS, JavaScript</Paragraph>\r\n              <Paragraph>HTML, CSS, JavaScript</Paragraph>\r\n              <Paragraph>HTML, CSS, JavaScript</Paragraph>\r\n            </Section>\r\n          </Body>\r\n        </Margin>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Header = styled.div`\r\n  text-align: center;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  margin: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 0.5rem;\r\n`;\r\n\r\nconst Info = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n`;\r\n\r\nconst InfoItem = styled.div``;\r\n\r\nconst Body = styled.div``;\r\n\r\nconst SubHeader = styled.h2`\r\n  border-bottom: 1px solid black;\r\n`;\r\n\r\nconst Section = styled.section``;\r\n\r\nconst Paragraph = styled.p`\r\n`;\r\n\r\n\r\nexport default function Classic(props) {\r\n  const [state, setState] = useState({\r\n    toggleOn: true,\r\n  })\r\n  const toggleSection = (e) => {\r\n\r\n  }\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Header>\r\n          <Title>\r\n            <Paragraph>{props.data.firstName} {props.data.middleName} {props.data.lastName}</Paragraph>\r\n            {/* <Paragraph>{props.data.middleName}</Paragraph> */}\r\n            {/* <Paragraph>{props.data.lastName}</Paragraph> */}\r\n          </Title>\r\n          <Info>\r\n            <InfoItem id=\"Email\"></InfoItem>\r\n            <InfoItem id=\"PhoneNumber\"></InfoItem>\r\n            <InfoItem id=\"GitHub\"></InfoItem>\r\n          </Info>\r\n        </Header>\r\n        <Body>\r\n          <Section>\r\n            { props.data.objective === undefined ? null : <SubHeader>Objective</SubHeader> }\r\n            <Paragraph>{props.data.objective}</Paragraph>\r\n          </Section>\r\n          <Section>\r\n            { props.data.school === undefined ? null : <SubHeader>Education</SubHeader> }\r\n            {/* <Paragraph>{props.data.education}</Paragraph> */}\r\n            {/* <Paragraph>{props.data.school.schoolDegree} {props.data.school.schoolMajorName}</Paragraph> */}\r\n          </Section>\r\n          {/* <Section>\r\n            { props.data.work === undefined ? null : <SubHeader>Work Experience</SubHeader> }\r\n            <Paragraph>{props.data.work}</Paragraph>\r\n          </Section> */}\r\n          <Section>\r\n            { props.data.skills === undefined ? null : <SubHeader>Skills</SubHeader> }\r\n            <Paragraph>{props.data.skills}</Paragraph>\r\n          </Section>\r\n        </Body>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Label = styled.label`\r\n    color: #0071BC;\r\n    text-transform: uppercase;\r\n    letter-spacing: 1px;\r\n    width: 100%;\r\n    // font-weight: 500;\r\n    // font-variant: small-caps;\r\n`\r\n\r\nconst Input = styled.input`\r\n    width: 100%;\r\n    border: none;\r\n    // border: 1px solid #E1E1E1;\r\n    border-bottom: 1px solid #e1e1e1;\r\n    // padding: 10px 15px;\r\n    padding: 10px 0px;\r\n    // border-radius: 5px;\r\n\r\n    :focus {\r\n        outline: none;\r\n        border-color: #0071BC;\r\n        // box-shadow: 0 0 3px #0071BC;\r\n    }\r\n\r\n    ::placeholder {\r\n        color: #e1e1e1;\r\n    }\r\n\r\n`\r\n\r\nexport const Item = styled.div`\r\n`\r\n\r\nexport default function TextInput(props) {\r\n    // https://ankurito.medium.com/how-to-set-the-default-value-of-a-text-input-in-react-329fb66991c9\r\n    // example shows this component to have its own state\r\n    const [text, setText] = useState('');\r\n    const handleTextChange = (e) => {\r\n        e.preventDefault();\r\n        setText(e.target.value);\r\n        props.onChange(e); //this works - pass whole event\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/* <Item className=\"container\"> */}\r\n            <Item className={props.className}>\r\n                <Label htmlFor={props.name}>{props.label}</Label>\r\n                <Input id={props.name} name={props.name} type=\"text\" placeholder={props.label}/>\r\n\r\n                {/* can't call the prop.onChange function directly, must call function within child that calls parent function */}\r\n                {/* <Input id={props.name} type=\"text\" value={text} placeholder={props.placeholder} onChange={props.onChange}/> */}\r\n            </Item>\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n// const Label = styled.label`\r\n//     color: #0071BC;\r\n//     text-transform: uppercase;\r\n//     letter-spacing: 1px;\r\n//     // font-variant: small-caps;\r\n// `\r\n\r\n// const Input = styled.textarea`\r\n//     border: 1px solid #E1E1E1;\r\n//     padding: 10px 15px;\r\n//     border-radius: 5px;\r\n\r\n//     :focus {\r\n//         outline: none;\r\n//         border-color: #0071BC;\r\n//         box-shadow: 0 0 3px #0071BC;\r\n//     }\r\n// `\r\n\r\n// const Container = styled.div`\r\n//     display: flex;\r\n//     flex-direction: column;\r\n// `\r\n\r\nconst Label = styled.label`\r\n    color: #0071BC;\r\n    text-transform: uppercase;\r\n    letter-spacing: 1px;\r\n    width: 100%;\r\n    // font-weight: 500;\r\n    // font-variant: small-caps;\r\n`\r\n\r\nconst Input = styled.textarea`\r\n    width: 100%;\r\n    border: none;\r\n    // border: 1px solid #E1E1E1;\r\n    border-bottom: 1px solid #e1e1e1;\r\n    // padding: 10px 15px;\r\n    padding: 10px 0px;\r\n    // border-radius: 5px;\r\n\r\n    :focus {\r\n        outline: none;\r\n        border-color: #0071BC;\r\n        // box-shadow: 0 0 3px #0071BC;\r\n    }\r\n\r\n    ::placeholder {\r\n        color: #e1e1e1;\r\n    }\r\n\r\n`\r\n\r\nexport const Item = styled.div`\r\n`\r\n\r\nexport default function TextArea(props) {\r\n    return (\r\n        <>\r\n            {/* <Item>\r\n                <Label>{props.name}</Label>\r\n                <Input placeholder={props.placeholder}/>\r\n            </Item> */}\r\n            <Item className={props.className}>\r\n                <Label htmlFor={props.name}>{props.label}</Label>\r\n                <Input id={props.name} name={props.name} type=\"text\" placeholder={props.label} rows=\"3\"/>\r\n            </Item>\r\n        </>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { AiFillPrinter, AiOutlinePlus } from \"react-icons/ai\";\r\nimport { PreClassic, Classic } from 'templates/index';\r\nimport {\r\n  SectionHeader,\r\n} from \"components/index\";\r\n\r\n// https://github.com/styled-components/styled-components/issues/1449#issuecomment-360331968\r\n// must import directly from file bc import from index will return undefined which causes run time error\r\nimport TextInput from \"components/TextInput\";\r\nimport TextArea from \"components/TextArea\";\r\n\r\nconst Nav = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  background-color: #fff;\r\n\r\n  border-bottom: 1px solid #e1e1e1;\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  padding: 0 20px;\r\n  width: 100%;\r\n  height: 50px;\r\n  gap: 32px;\r\n`;\r\n\r\nconst FixedArea = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  gap: 10px;\r\n  font-size: 36px;\r\n`;\r\n\r\nconst VerticalLine = styled.div`\r\n  border-left: 2px solid #e1e1e1;\r\n  height: 50%;\r\n`;\r\n\r\nconst ButtonArea = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  gap: 10px;\r\n  font-size: 36px;\r\n`;\r\n\r\nconst Section = styled.div`\r\n  //nav is 50px height\r\n  // margin-top: 50px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 35px;\r\n  padding: 0 20px 35px 20px;\r\n\r\n  // background-color: pink;\r\n  // align-items: center;\r\n\r\n`;\r\n\r\nconst Template = styled(Section)`\r\n  align-items: center;\r\n  // background-color: #282828;\r\n  // background-color: #4E4E4E;\r\n  background-color: #747474;\r\n\r\n` \r\n\r\nconst Container = styled.div`\r\n margin-top: 50px;\r\n  @media (min-width: 768px) {\r\n    display: flex;\r\n  }\r\n`\r\n\r\nconst Form = styled.form`\r\n  display: grid;\r\n  gap: 35px;\r\n`;\r\n\r\n// you can't use numbers e.g. <TextInput100>\r\nconst TextInputWide = styled(TextInput)`\r\n  grid-column: 1 / -1;\r\n`\r\nconst TextAreaWide = styled(TextArea)`\r\n  grid-column: 1 / -1;\r\n`\r\n\r\nconst Card = styled.div`\r\n  display: grid;\r\n  gap: 35px;\r\n  grid-template-columns: repeat(auto-fill, minmax(175px, 1fr));\r\n`\r\n\r\nconst SeparateNavFromContents = styled.div`\r\n  margin-top: 70px;\r\n\r\n`\r\n\r\nconst ButtonSection = styled.button``;\r\nconst ButtonActiveSection = styled.button``;\r\n\r\nexport default function NavContents(props) {\r\n  const [section, setSection] = useState('basic');\r\n  const [template, setTemplate] = useState('');\r\n\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const initialValues = {\r\n    firstName: \"\",\r\n    middleName: \"\",\r\n    lastName: \"\",\r\n    work: \"\",\r\n    skills: \"\",\r\n  };\r\n  const [state, setState] = useState({\r\n    // order: \"\",\r\n    // paid: false,\r\n    // submitting: false,\r\n    // loading: false,\r\n\r\n    // data: initialValues,\r\n  });\r\n\r\n  const handleForm = (e) => {\r\n    e.preventDefault();\r\n    setTemplate('classic');\r\n\r\n    // need to have ...state to keep prev array states, else it will overwrite entire arr with one state\r\n    setState({...state, [e.target.name]: e.target.value})\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Nav>\r\n        <FixedArea>\r\n          <AiFillPrinter/>\r\n        </FixedArea>\r\n        <VerticalLine />\r\n        <ButtonArea>\r\n          <ButtonSection onClick={() => setTemplate(\"classic\")}>\r\n            Classic\r\n          </ButtonSection>\r\n        </ButtonArea>\r\n      </Nav>\r\n\r\n      \r\n      {/* <Section>\r\n        {\r\n            section === 'basic' ? <Basic parentCallback={ handleCallback }/> : \r\n            section === 'education' ? <Education/> :\r\n            null\r\n        } \r\n      </Section> */}\r\n      \r\n      <Container>\r\n\r\n        <Section id=\"container-info\" className=\"scroll\">\r\n          <Form onChange={handleForm}>\r\n              <SectionHeader name=\"Basic Information\" />\r\n            <Card>\r\n              {/* <Item>\r\n                <Label htmlFor=\"firstName\">First Name</Label>\r\n                <Input name=\"firstName\" type=\"text\"/>\r\n              </Item> */}\r\n              <TextInput name=\"firstName\" label=\"First Name\"/>\r\n              <TextInput name=\"middleName\" label=\"Middle Name\"/>\r\n              <TextInput name=\"lastName\" label=\"Last Name\"/>\r\n              <TextInput name=\"email\" label=\"Email\"/>\r\n              <TextInput name=\"phone\" label=\"Phone\"/>\r\n            </Card>\r\n\r\n              <SectionHeader name=\"Links\" />\r\n            <Card>\r\n              <TextInput name=\"github\" label=\"GitHub\"/>\r\n              <TextInput name=\"website\" label=\"Website\"/>\r\n              <TextInput name=\"linkedin\" label=\"LinkedIn\"/>\r\n            </Card>\r\n            \r\n            <SectionHeader name=\"Others\" />\r\n            <Card>\r\n              <TextAreaWide name=\"skills\" label=\"Skills\"/>\r\n              <TextAreaWide name=\"objective\" label=\"Objective\"/>\r\n            </Card>\r\n\r\n            <SectionHeader name=\"Education\" />\r\n            <Card>\r\n              <TextInput name=\"schoolName\" label=\"School Name\"/>\r\n              <TextInput name=\"schoolState\" label=\"State\"/>\r\n              <TextInput name=\"schoolCity\" label=\"City\"/>\r\n              <TextInput name=\"schoolMajorName\" label=\"Major Name\"/>\r\n              <TextInput name=\"schoolDegree\" label=\"Degree\"/>\r\n              <TextInput name=\"schoolYearStart\" label=\"Year Start\"/>\r\n              <TextInput name=\"schoolYearEnd\" label=\"Year End\"/>\r\n            </Card>\r\n\r\n            <SectionHeader name=\"Company\" />\r\n            <Card>\r\n              <TextInput name=\"companyJobTitle\" label=\"Job Title\"/>\r\n              <TextInput name=\"companyJobDescription\" label=\"Job Description\"/>\r\n              <TextInput name=\"companyName\" label=\"Company Name\"/>\r\n              <TextInput name=\"companyState\" label=\"State\"/>\r\n              <TextInput name=\"companyCity\" label=\"City\"/>\r\n              <TextInput name=\"companyYearStart\" label=\"Year Start\"/>\r\n              <TextInput name=\"companyYearEnd\" label=\"Year End\"/>\r\n            </Card>\r\n          </Form>\r\n        </Section>\r\n\r\n        <Template id=\"container-template\" className=\"scroll\">\r\n          {console.log()}\r\n          {\r\n              template === '' ? <PreClassic/> :\r\n              template === 'classic' ? <Classic id=\"print\" data={state}/> :\r\n              null\r\n          }\r\n        </Template>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Header = styled.h2`\r\n    padding-top: 20px;\r\n    font-weight: 400;\r\n    font-variant: small-caps;\r\n    margin: 0;\r\n`\r\n\r\nconst HorizontalLine = styled.hr`\r\n    width: 100%;\r\n    margin: 0;\r\n`\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nexport default function SectionHeader(props) {\r\n    return (\r\n        <>\r\n            <Container>\r\n                <Header>{props.name}</Header>\r\n                {/* <HorizontalLine/> */}\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n    background-color: #0071BC;\r\n    width: 100%;\r\n    border: none;\r\n    border-radius: 5px;\r\n    color: #fff;\r\n    padding: 10px;\r\n    text-transform: uppercase;\r\n    letter-spacing: 1px;\r\n`\r\n\r\nexport default function ButtonRound(props) {\r\n    return (\r\n        <>\r\n            <Button type={props.type}>{props.name}</Button>\r\n        </>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  TextInput,\r\n  SectionHeader,\r\n} from \"components/index\";\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 35px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  background-color: #0071bc;\r\n  width: 100%;\r\n  border: none;\r\n  border-radius: 5px;\r\n  color: #fff;\r\n  padding: 10px;\r\n  text-transform: uppercase;\r\n  letter-spacing: 1px;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  color: #0071bc;\r\n  text-transform: uppercase;\r\n  letter-spacing: 1px;\r\n  // font-variant: small-caps;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  border: 1px solid #e1e1e1;\r\n  padding: 10px 15px;\r\n  border-radius: 5px;\r\n\r\n  :focus {\r\n    outline: none;\r\n    border-color: #0071bc;\r\n    box-shadow: 0 0 3px #0071bc;\r\n  }\r\n`;\r\n\r\nconst Section = styled.div`\r\n  //nav is 70px height\r\n  margin-top: 70px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 35px;\r\n  padding: 0 20px 35px 20px;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport default function Basic(props) {\r\n  const [text, setText] = useState(\"\");\r\n  const [template, setTemplate] = useState(\"\");\r\n\r\n  const initialValues = {\r\n    firstName: \"\",\r\n    middleName: \"\",\r\n    lastName: \"\",\r\n    phone: \"\",\r\n    email: \"\",\r\n    skills: \"\",\r\n  };\r\n\r\n  const [state, setState] = useState({\r\n    order: \"\",\r\n    paid: false,\r\n    submitting: false,\r\n    loading: false,\r\n    data: initialValues,\r\n  });\r\n\r\n  const handleTextChange = (e) => {\r\n    e.preventDefault();\r\n\r\n    console.log(e.target);\r\n    setText(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Section>\r\n        <SectionHeader name=\"Basic Information\" />\r\n\r\n        {/* <Form onSubmit={handleSubmit}> */}\r\n        <Form>\r\n          <Container>\r\n            <Label htmlFor=\"\">Test</Label>\r\n            <Input\r\n              id=\"\"\r\n              type=\"text\"\r\n              value={text}\r\n              placeholder=\"test\"\r\n              onChange={handleTextChange}\r\n            />\r\n          </Container>\r\n          <Container>\r\n            <Label htmlFor=\"\">Test2</Label>\r\n            <Input\r\n              id=\"\"\r\n              type=\"text\"\r\n              value={text}\r\n              placeholder=\"test\"\r\n              onChange={handleTextChange}\r\n            />\r\n          </Container>\r\n          <TextInput name=\"First Name\" placeholder=\"John\" />\r\n          <TextInput name=\"Middle Name\" placeholder=\"C\" />\r\n          <TextInput name=\"Last Name\" placeholder=\"Doe\" />\r\n          {/* <TextInput name=\"Phone Number\" placeholder=\"(626) 123 - 4567\" /> */}\r\n\r\n          {/* <TextInput name=\"Email\" placeholder=\"johndoe@email.com\" /> */}\r\n          {/* <TextArea\r\n          name=\"Objective\"\r\n          placeholder=\"Hello World! My name is John C Doe and I am a developer.\"\r\n        /> */}\r\n          {/* <TextInput name=\"Skills\" placeholder=\"HTML, CSS, JavaScript\" /> */}\r\n          {/* <TextInput name=\"Website\" placeholder=\"www.linkedin.com/in/johndoe\" /> */}\r\n          {/* <TextInput name=\"LinkedIn\" placeholder=\"www.github.com/johndoe\" /> */}\r\n          {/* <TextInput name=\"GitHub\" placeholder=\"www.somewebsite.com\" /> */}\r\n          {/* <ButtonRound name=\"Save\" type=\"submit\" /> */}\r\n        </Form>\r\n      </Section>\r\n\r\n      <hr></hr>\r\n\r\n      {/* <Section>\r\n        {\r\n          template === '' ? <PreClassic/> :\r\n          template === 'filled' ? <Classic text={text}/> :\r\n          null\r\n        }\r\n      </Section> */}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  TextInput,\r\n  SectionHeader,\r\n  Layout,\r\n  TextArea,\r\n  NavContents,\r\n  Nav,\r\n  ButtonRound,\r\n} from \"components/index\";\r\n\r\nconst Button = styled.button`\r\n  background-color: #0071bc;\r\n  width: 100%;\r\n  border: none;\r\n  border-radius: 5px;\r\n  color: #fff;\r\n  padding: 10px;\r\n  text-transform: uppercase;\r\n  letter-spacing: 1px;\r\n`;\r\n\r\nexport default function Education(props) {\r\n  return (\r\n    <>\r\n      <SectionHeader name=\"Education\" />\r\n      <TextInput name=\"School Name\" placeholder=\"School Name University\" />\r\n      <TextInput name=\"School State\" placeholder=\"CA\" />\r\n      <TextInput name=\"School City\" placeholder=\"Some City\" />\r\n      <TextInput name=\"Major Name\" placeholder=\"Computer Science\" />\r\n      <TextInput name=\"Degree\" placeholder=\"B.S.\" />\r\n      <TextInput name=\"Year Start\" placeholder=\"Jan 2010\" />\r\n      <TextInput name=\"Year End\" placeholder=\"Jan 2014\" />\r\n    </>\r\n  );\r\n}\r\n","// A mock function to mimic making an async request for data\r\nexport function fetchCount(amount = 1) {\r\n  return new Promise((resolve) =>\r\n    setTimeout(() => resolve({ data: amount }), 500)\r\n  );\r\n}\r\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { fetchCount } from './counterAPI';\r\n\r\nconst initialState = {\r\n  value: 0,\r\n  status: 'idle',\r\n};\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched. Thunks are\r\n// typically used to make async requests.\r\nexport const incrementAsync = createAsyncThunk(\r\n  'counter/fetchCount',\r\n  async (amount) => {\r\n    const response = await fetchCount(amount);\r\n    // The value we return becomes the `fulfilled` action payload\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState,\r\n  // The `reducers` field lets us define reducers and generate associated actions\r\n  reducers: {\r\n    increment: (state) => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value += 1;\r\n    },\r\n    decrement: (state) => {\r\n      state.value -= 1;\r\n    },\r\n    // Use the PayloadAction type to declare the contents of `action.payload`\r\n    incrementByAmount: (state, action) => {\r\n      state.value += action.payload;\r\n    },\r\n  },\r\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\r\n  // including actions generated by createAsyncThunk or in other slices.\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(incrementAsync.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(incrementAsync.fulfilled, (state, action) => {\r\n        state.status = 'idle';\r\n        state.value += action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\r\nexport const selectCount = (state) => state.counter.value;\r\n\r\n// We can also write thunks by hand, which may contain both sync and async logic.\r\n// Here's an example of conditionally dispatching actions based on current state.\r\nexport const incrementIfOdd = (amount) => (dispatch, getState) => {\r\n  const currentValue = selectCount(getState());\r\n  if (currentValue % 2 === 1) {\r\n    dispatch(incrementByAmount(amount));\r\n  }\r\n};\r\n\r\nexport default counterSlice.reducer;\r\n","import React, {useState} from 'react';\r\nimport './App.css';\r\nimport styled from 'styled-components';\r\nimport {\r\n  Dashboard,\r\n  TextInput,\r\n  SectionHeader,\r\n  ButtonRound,\r\n  TextArea,\r\n} from \"components/index\";\r\nimport {SectionBasic} from 'sections/index';\r\n\r\nimport { Counter } from './features/counter/Counter';\r\n\r\n\r\nconst Section = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 35px;\r\n  padding: 0 20px 35px 20px;\r\n`\r\n\r\nexport default function App() {\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const handleTextChange = (e) => {\r\n    e.preventDefault();\r\n\r\n    console.log(e.target);\r\n    setText(e.target.value);\r\n  };\r\n  return (\r\n    <>\r\n        <Dashboard className=\"full-height\"/>\r\n    </>\r\n  )\r\n}\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport counterReducer from '../features/counter/counterSlice';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    counter: counterReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nimport { store } from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Counter_row__1VZXJ\",\"value\":\"Counter_value__3t1Rx\",\"button\":\"Counter_button___5yWm\",\"textbox\":\"Counter_textbox__2Nmfa\",\"asyncButton\":\"Counter_asyncButton__2JtUW Counter_button___5yWm\"};"],"sourceRoot":""}