{"version":3,"sources":["components/Layout.js","sections/Basic.js","sections/Education.js","sections/Resume.js","components/NavContents.js","components/TextInput.js","components/SectionHeader.js","components/TextArea.js","components/ButtonRound.js","features/counter/counterAPI.js","features/counter/counterSlice.js","features/counter/Counter.js","App.js","app/store.js","serviceWorker.js","reportWebVitals.js","index.js","features/counter/Counter.module.css"],"names":["styled","div","Form","button","Basic","props","useState","SectionHeader","name","onSubmit","e","preventDefault","console","log","TextInput","placeholder","TextArea","ButtonRound","type","Education","Resume","Container","FixedArea","VerticalLine","ButtonArea","Section","ButtonSection","NavContents","section","setSection","onClick","parentCallback","childData","Label","label","Input","input","setName","htmlFor","id","value","onChange","target","Header","h2","HorizontalLine","hr","textarea","Button","fetchCount","amount","Promise","resolve","setTimeout","data","incrementAsync","createAsyncThunk","a","response","counterSlice","createSlice","initialState","status","reducers","increment","state","decrement","incrementByAmount","action","payload","extraReducers","builder","addCase","pending","fulfilled","actions","selectCount","counter","Counter","count","useSelector","dispatch","useDispatch","incrementAmount","setIncrementAmount","incrementValue","Number","className","styles","row","aria-label","textbox","asyncButton","getState","App","store","configureStore","reducer","counterReducer","Boolean","window","location","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.7f7a91d5.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    overflow: none;\r\n`\r\n\r\nconst HalfColumn = styled.div`\r\n    width: 50%;\r\n    // height: 100vh;\r\n    border: 1px solid black;\r\n`\r\n\r\nexport default function Layout(props) {\r\n    return (\r\n        <>\r\n            <Container>\r\n                <HalfColumn>\r\n\r\n                </HalfColumn>\r\n                <HalfColumn>\r\n                    \r\n                </HalfColumn>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n","import React, {useState} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  TextInput,\r\n  SectionHeader,\r\n  Layout,\r\n  TextArea,\r\n  NavContents,\r\n  Nav,\r\n  ButtonRound,\r\n} from \"components/index\";\r\n\r\nimport {Resume} from 'sections/index';\r\n\r\nconst Form = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 35px;\r\n`\r\n\r\nconst Button = styled.button`\r\n  background-color: #0071bc;\r\n  width: 100%;\r\n  border: none;\r\n  border-radius: 5px;\r\n  color: #fff;\r\n  padding: 10px;\r\n  text-transform: uppercase;\r\n  letter-spacing: 1px;\r\n`;\r\n\r\nexport default function Basic(props) {\r\n  const [text, setText] = useState('text');\r\n  const handleNameChange = (e) => {\r\n    e.preventDefault();\r\n    setText(e.target.value);\r\n  }\r\n\r\n  const [resume, setResume] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log('handle save click');\r\n  }\r\n  return (\r\n    <>\r\n      <SectionHeader name=\"Basic Information\"/>\r\n\r\n      {/* callback doesn't work with styled-components <Form>, use HTML <form>  - https://www.thetopsites.net/article/53166131.shtml*/}\r\n      {/* <form onSubmit={ handleSubmit }> */}\r\n      <Form onSubmit={ handleSubmit }>\r\n        {/* <TextInput name=\"First Name\" placeholder=\"John\" value={text} onChange={ handleNameChange }/> */}\r\n        {/* <TextInput name=\"Middle Name\" placeholder=\"C\" value={text}/> */}\r\n        <TextInput name=\"Last Name\" placeholder=\"Doe\" />\r\n        <TextInput name=\"Phone Number\" placeholder=\"(626) 123 - 4567\" />\r\n        <TextInput name=\"Email\" placeholder=\"johndoe@email.com\" />\r\n        <TextArea\r\n          name=\"Objective\"\r\n          placeholder=\"Hello World! My name is John C Doe and I am a developer.\"\r\n        />\r\n        <TextInput name=\"Skills\" placeholder=\"HTML, CSS, JavaScript\" />\r\n        <TextInput name=\"Website\" placeholder=\"www.linkedin.com/in/johndoe\" />\r\n        <TextInput name=\"LinkedIn\" placeholder=\"www.github.com/johndoe\" />\r\n        <TextInput name=\"GitHub\" placeholder=\"www.somewebsite.com\" />\r\n        <ButtonRound name=\"Save\" type='submit'/>\r\n      </Form>\r\n      {/* </form> */}\r\n      {/* <ButtonRound name=\"Save\" onClick={ handleSubmit }/> */}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  TextInput,\r\n  SectionHeader,\r\n  Layout,\r\n  TextArea,\r\n  NavContents,\r\n  Nav,\r\n  ButtonRound,\r\n} from \"components/index\";\r\n\r\nconst Button = styled.button`\r\n  background-color: #0071bc;\r\n  width: 100%;\r\n  border: none;\r\n  border-radius: 5px;\r\n  color: #fff;\r\n  padding: 10px;\r\n  text-transform: uppercase;\r\n  letter-spacing: 1px;\r\n`;\r\n\r\nexport default function Education(props) {\r\n  return (\r\n    <>\r\n      <SectionHeader name=\"Education\" />\r\n      <TextInput name=\"School Name\" placeholder=\"School Name University\" />\r\n      <TextInput name=\"School State\" placeholder=\"CA\" />\r\n      <TextInput name=\"School City\" placeholder=\"Some City\" />\r\n      <TextInput name=\"Major Name\" placeholder=\"Computer Science\" />\r\n      <TextInput name=\"Degree\" placeholder=\"B.S.\" />\r\n      <TextInput name=\"Year Start\" placeholder=\"Jan 2010\" />\r\n      <TextInput name=\"Year End\" placeholder=\"Jan 2014\" />\r\n      {/* <ButtonRound name=\"Save\" type='submit'/> */}\r\n    </>\r\n  );\r\n}\r\n","import React, {useState} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  TextInput,\r\n  SectionHeader,\r\n  Layout,\r\n  TextArea,\r\n  NavContents,\r\n  Nav,\r\n  ButtonRound,\r\n} from \"components/index\";\r\n\r\nexport default function Resume(props) {\r\n  return (\r\n    <>\r\n      <TextInput name=\"Test\" placeholder=\"Test\" />\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { AiFillPrinter, AiOutlinePlus } from \"react-icons/ai\";\r\nimport { IoIosSave } from 'react-icons/io';\r\nimport { Basic, Education, Resume } from \"sections/index\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst Container = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  background-color: #fff;\r\n\r\n  border-bottom: 1px solid #e1e1e1;\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  padding: 0 20px;\r\n  width: 100%;\r\n  height: 70px;\r\n  gap: 32px;\r\n`;\r\n\r\nconst FixedArea = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  gap: 10px;\r\n  font-size: 36px;\r\n`;\r\n\r\nconst VerticalLine = styled.div`\r\n  border-left: 2px solid #e1e1e1;\r\n  height: 50%;\r\n`;\r\n\r\nconst ButtonArea = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  gap: 10px;\r\n  font-size: 36px;\r\n`;\r\n\r\nconst Section = styled.div`\r\n  //nav is 70px height\r\n  margin-top: 70px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 35px;\r\n  padding: 0 20px 35px 20px;\r\n`;\r\n\r\nconst ButtonSection = styled.button``;\r\nconst ButtonActiveSection = styled.button``;\r\n\r\nexport default function NavContents(props) {\r\n  const [section, setSection] = useState('basic');\r\n  const handleSectionClick = (e) => {\r\n    setSection(\"basic\");\r\n  };\r\n\r\n  const [resume, setResume] = useState('');\r\n\r\n  const handleCallback = (childData) => {\r\n    // setResume()\r\n    console.log('test callback');\r\n    console.log(childData);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <FixedArea>\r\n          <AiFillPrinter />\r\n          <IoIosSave onClick={() => setSection('')}/>\r\n        </FixedArea>\r\n        <VerticalLine />\r\n        <ButtonArea>\r\n          {/* <AiOutlinePlus/> */}\r\n          {/* <ButtonSection onClick={ handleSectionClick }>Basic</ButtonSection> */}\r\n          <ButtonSection onClick={() => setSection(\"basic\")}>\r\n            Basic\r\n          </ButtonSection>\r\n          <ButtonSection onClick={() => setSection(\"education\")}>\r\n            Education\r\n          </ButtonSection>\r\n        </ButtonArea>\r\n      </Container>\r\n      <Section>\r\n        {\r\n            section === 'basic' ? <Basic parentCallback={ handleCallback }/> : \r\n            section === 'education' ? <Education/> :\r\n            null\r\n        } \r\n      </Section>\r\n\r\n      <hr></hr>\r\n\r\n      <Section>\r\n        <Resume/>\r\n        {/* {\r\n          resume === '' ? <Resume/> :\r\n          null\r\n        } */}\r\n      </Section>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Label = styled.label`\r\n    color: #0071BC;\r\n    text-transform: uppercase;\r\n    letter-spacing: 1px;\r\n    // font-variant: small-caps;\r\n`\r\n\r\nconst Input = styled.input`\r\n    border: 1px solid #E1E1E1;\r\n    padding: 10px 15px;\r\n    border-radius: 5px;\r\n\r\n    :focus {\r\n        outline: none;\r\n        border-color: #0071BC;\r\n        box-shadow: 0 0 3px #0071BC;\r\n    }\r\n`\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nexport default function TextInput(props) {\r\n    // https://ankurito.medium.com/how-to-set-the-default-value-of-a-text-input-in-react-329fb66991c9\r\n    // example shows this component to have its own state\r\n    const [name, setName] = useState('');\r\n    const handleNameChange = (e) => {\r\n        e.preventDefault();\r\n\r\n        console.log(e.target);\r\n        setName(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Container>\r\n                <Label htmlFor={props.name}>{props.name}</Label>\r\n                {/* <Input type={props.type} value={props.value} placeholder={props.placeholder} onChange={handleNameChange}/> */}\r\n                <Input id={props.name} type=\"text\" value={name} placeholder={props.placeholder} onChange={handleNameChange}/>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Header = styled.h2`\r\n    padding-top: 20px;\r\n    font-weight: 400;\r\n    font-variant: small-caps;\r\n    margin: 0;\r\n`\r\n\r\nconst HorizontalLine = styled.hr`\r\n    width: 100%;\r\n    margin: 0;\r\n    // background-color: red;\r\n    // color: red;\r\n    // outline-color: red;\r\n`\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nexport default function SectionHeader(props) {\r\n    return (\r\n        <>\r\n            <Container>\r\n                <Header>{props.name}</Header>\r\n                {/* <HorizontalLine></HorizontalLine> */}\r\n                <HorizontalLine/>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Label = styled.label`\r\n    color: #0071BC;\r\n    text-transform: uppercase;\r\n    letter-spacing: 1px;\r\n    // font-variant: small-caps;\r\n`\r\n\r\nconst Input = styled.textarea`\r\n    border: 1px solid #E1E1E1;\r\n    padding: 10px 15px;\r\n    border-radius: 5px;\r\n\r\n    :focus {\r\n        outline: none;\r\n        border-color: #0071BC;\r\n        box-shadow: 0 0 3px #0071BC;\r\n    }\r\n`\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nexport default function TextArea(props) {\r\n    return (\r\n        <>\r\n            <Container>\r\n                <Label>{props.name}</Label>\r\n                <Input placeholder={props.placeholder}/>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n    background-color: #0071BC;\r\n    width: 100%;\r\n    border: none;\r\n    border-radius: 5px;\r\n    color: #fff;\r\n    padding: 10px;\r\n    text-transform: uppercase;\r\n    letter-spacing: 1px;\r\n`\r\n\r\nexport default function ButtonRound(props) {\r\n    return (\r\n        <>\r\n            <Button type={props.type}>{props.name}</Button>\r\n        </>\r\n    );\r\n}\r\n","// A mock function to mimic making an async request for data\nexport function fetchCount(amount = 1) {\n  return new Promise((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchCount } from './counterAPI';\n\nconst initialState = {\n  value: 0,\n  status: 'idle',\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n  'counter/fetchCount',\n  async (amount) => {\n    const response = await fetchCount(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd = (amount) => (dispatch, getState) => {\n  const currentValue = selectCount(getState());\n  if (currentValue % 2 === 1) {\n    dispatch(incrementByAmount(amount));\n  }\n};\n\nexport default counterSlice.reducer;\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  decrement,\n  increment,\n  incrementByAmount,\n  incrementAsync,\n  incrementIfOdd,\n  selectCount,\n} from './counterSlice';\nimport styles from './Counter.module.css';\n\nexport function Counter() {\n  const count = useSelector(selectCount);\n  const dispatch = useDispatch();\n  const [incrementAmount, setIncrementAmount] = useState('2');\n\n  const incrementValue = Number(incrementAmount) || 0;\n\n  return (\n    <div>\n      <div className={styles.row}>\n        <button\n          className={styles.button}\n          aria-label=\"Decrement value\"\n          onClick={() => dispatch(decrement())}\n        >\n          -\n        </button>\n        <span className={styles.value}>{count}</span>\n        <button\n          className={styles.button}\n          aria-label=\"Increment value\"\n          onClick={() => dispatch(increment())}\n        >\n          +\n        </button>\n      </div>\n      <div className={styles.row}>\n        <input\n          className={styles.textbox}\n          aria-label=\"Set increment amount\"\n          value={incrementAmount}\n          onChange={(e) => setIncrementAmount(e.target.value)}\n        />\n        <button\n          className={styles.button}\n          onClick={() => dispatch(incrementByAmount(incrementValue))}\n        >\n          Add Amount\n        </button>\n        <button\n          className={styles.asyncButton}\n          onClick={() => dispatch(incrementAsync(incrementValue))}\n        >\n          Add Async\n        </button>\n        <button\n          className={styles.button}\n          onClick={() => dispatch(incrementIfOdd(incrementValue))}\n        >\n          Add If Odd\n        </button>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport './App.css';\nimport styled from 'styled-components';\nimport {NavContents, Nav} from 'components/index';\nimport {SectionBasic} from 'sections/index';\n\nimport { Counter } from './features/counter/Counter';\n\n\nconst Section = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 35px;\n  padding: 0 20px 35px 20px;\n`\n\nexport default function App() {\n  // const toSection = () => {\n  //   return (\n\n  //   );\n  // }\n  return (\n    <>\n        {/* <Nav/> */}\n        <NavContents/>\n        <Counter/>\n        {/* <Section>\n          <SectionBasic/>\n        </Section> */}\n    </>\n  )\n}\n","import { configureStore } from '@reduxjs/toolkit';\nimport counterReducer from '../features/counter/counterSlice';\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Counter_row__1VZXJ\",\"value\":\"Counter_value__3t1Rx\",\"button\":\"Counter_button___5yWm\",\"textbox\":\"Counter_textbox__2Nmfa\",\"asyncButton\":\"Counter_asyncButton__2JtUW Counter_button___5yWm\"};"],"sourceRoot":""}